<?php

// 
//  Voyage
//
//  Voyage is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  Voyage is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY ); without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//*********************************************************************************
//  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
//  Generated by xsd2code on Thu Aug 26 11:23:11 2010.
//*********************************************************************************
//  Copyright 2010
//


class Voyage { 

    var $m_id; // default value is uninitialized
    var $m_idPresent;
    var $m_sourceName; // default value is uninitialized
    var $m_sourceNamePresent;
    var $m_source; // default value is uninitialized
    var $m_sourcePresent;
    var $m_cargoType; // default value is uninitialized
    var $m_cargoTypePresent;
    var $m_destination; // default value is uninitialized
    var $m_destinationPresent;
    var $m_ETA; // default value is uninitialized
    var $m_ETAPresent;
    var $m_ATA; // default value is uninitialized
    var $m_ATAPresent;
    var $m_personsOnBoard; // default value is uninitialized
    var $m_personsOnBoardPresent;
    var $m_airDraught; // default value is uninitialized
    var $m_airDraughtPresent;
    var $m_draught; // default value is uninitialized
    var $m_draughtPresent;

    public function Voyage() {

        date_default_timezone_set('UTC');
        $this->m_idPresent = false;
        $this->m_sourceNamePresent = false;
        $this->m_sourcePresent = false;
        $this->m_cargoTypePresent = false;
        $this->m_destinationPresent = false;
        $this->m_ETAPresent = false;
        $this->m_ATAPresent = false;
        $this->m_personsOnBoardPresent = false;
        $this->m_airDraughtPresent = false;
        $this->m_draughtPresent = false;
    }

    public function setId( $val ) {

        if (strlen ($val) > 40)
          return false;
        $this->m_idPresent = true;
        $this->m_id = $val;
        return true;
    }

    public function getId() {

        return $this->m_id;
    }

    public function setSourceName( $val ) {

        $this->m_sourceNamePresent = true;
        $this->m_sourceName = $val;
        return true;
    }

    public function getSourceName() {

        return $this->m_sourceName;
    }

    public function setSource( $val ) {

        if ( ( $val != 1 ) &&
             ( $val != 2 ) &&
             ( $val != 3 ) )
            return false;
        $this->m_sourcePresent = true;
        $this->m_source = $val;
        return true;
    }

    public function getSource() {

        return $this->m_source;
    }

    public function setCargoType( $val ) {

        if ( ( $val != 0 ) &&
             ( $val != 1 ) &&
             ( $val != 2 ) &&
             ( $val != 3 ) &&
             ( $val != 4 ) &&
             ( $val != 9 ) )
            return false;
        $this->m_cargoTypePresent = true;
        $this->m_cargoType = $val;
        return true;
    }

    public function getCargoType() {

        return $this->m_cargoType;
    }

    public function hasCargoType() {

        return $this->m_cargoTypePresent;
    }

    public function setDestination( $val ) {

        $this->m_destinationPresent = true;
        $this->m_destination = $val;
        return true;
    }

    public function getDestination() {

        return $this->m_destination;
    }

    public function hasDestination() {

        return $this->m_destinationPresent;
    }

    public function setETA( $val ) {

        $this->m_ETAPresent = true;
        $this->m_ETA = $val;
        return true;
    }

    public function getETA() {

        return $this->m_ETA;
    }

    public function hasETA() {

        return $this->m_ETAPresent;
    }

    public function setATA( $val ) {

        $this->m_ATAPresent = true;
        $this->m_ATA = $val;
        return true;
    }

    public function getATA() {

        return $this->m_ATA;
    }

    public function hasATA() {

        return $this->m_ATAPresent;
    }

    public function setPersonsOnBoard( $val ) {

        if ($val < 0)
          return false;
        $this->m_personsOnBoardPresent = true;
        $this->m_personsOnBoard = $val;
        return true;
    }

    public function getPersonsOnBoard() {

        return $this->m_personsOnBoard;
    }

    public function hasPersonsOnBoard() {

        return $this->m_personsOnBoardPresent;
    }

    public function setAirDraught( $val ) {

        if ($val < 0)
          return false;
        $this->m_airDraughtPresent = true;
        $this->m_airDraught = $val;
        return true;
    }

    public function getAirDraught() {

        return $this->m_airDraught;
    }

    public function hasAirDraught() {

        return $this->m_airDraughtPresent;
    }

    public function setDraught( $val ) {

        if ($val < 0)
          return false;
        $this->m_draughtPresent = true;
        $this->m_draught = $val;
        return true;
    }

    public function getDraught() {

        return $this->m_draught;
    }

    public function hasDraught() {

        return $this->m_draughtPresent;
    }

    public function toXML() {

        $xml = new SimpleXMLElement("<Voyage></Voyage>");

        if ( $this->m_idPresent ) {
            $xml->addAttribute('Id', $this->m_id);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->m_sourceNamePresent ) {
            $xml->addAttribute('SourceName', $this->m_sourceName);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->m_sourcePresent ) {
            $xml->addAttribute('Source', $this->m_source);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->hasCargoType() ) {
            $xml->addAttribute('CargoType', $this->m_cargoType);
        }
        if ( $this->hasDestination() ) {
            $xml->addAttribute('Destination', $this->m_destination);
        }
        if ( $this->hasETA() ) {
            $xml->addAttribute('ETA', $this->m_ETA);
        }
        if ( $this->hasATA() ) {
            $xml->addAttribute('ATA', $this->m_ATA);
        }
        if ( $this->hasPersonsOnBoard() ) {
            $xml->addAttribute('PersonsOnBoard', $this->m_personsOnBoard);
        }
        if ( $this->hasAirDraught() ) {
            $xml->addAttribute('AirDraught', number_format($this->m_airDraught, 6));
        }
        if ( $this->hasDraught() ) {
            $xml->addAttribute('Draught', number_format($this->m_draught, 6));
        }
        return $xml->asXML();
    }

    public function toString() {

    	return $this->toStringWithLead("");
    }

    public function toStringWithLead( $lead ) {

        $str = $lead . "Voyage\n";

        $str .= $lead . "    Id = " . $this->m_id . "\n";
        $str .= $lead . "    SourceName = " . $this->m_sourceName . "\n";
        $str .= $lead . "    Source = " . $this->m_source . "\n";
        if ( $this->hasCargoType() ) {
            $str .= $lead . "    CargoType = " . $this->m_cargoType . "\n";
        }
        if ( $this->hasDestination() ) {
            $str .= $lead . "    Destination = " . $this->m_destination . "\n";
        }
        if ( $this->hasETA() ) {
            $str .= $lead . "    ETA = " . $this->m_ETA . "\n";
        }
        if ( $this->hasATA() ) {
            $str .= $lead . "    ATA = " . $this->m_ATA . "\n";
        }
        if ( $this->hasPersonsOnBoard() ) {
            $str .= $lead . "    PersonsOnBoard = " . $this->m_personsOnBoard . "\n";
        }
        if ( $this->hasAirDraught() ) {
            $str .= $lead . "    AirDraught = " . number_format($this->m_airDraught, 6) . "\n";
        }
        if ( $this->hasDraught() ) {
            $str .= $lead . "    Draught = " . number_format($this->m_draught, 6) . "\n";
        }

        return $str;
    }
}
?>
