<?php

// 
//  StaticData
//
//  StaticData is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  StaticData is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY ); without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//*********************************************************************************
//  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
//  Generated by xsd2code on Fri May 28 20:19:56 2010.
//*********************************************************************************
//  Copyright 2010
//


class StaticData { 

    var $m_id; // default value is uninitialized
    var $m_idPresent;
    var $m_sourceName; // default value is uninitialized
    var $m_sourceNamePresent;
    var $m_source; // default value is uninitialized
    var $m_sourcePresent;
    var $m_length; // default value is uninitialized
    var $m_lengthPresent;
    var $m_breadth; // default value is uninitialized
    var $m_breadthPresent;
    var $m_callsign; // default value is uninitialized
    var $m_callsignPresent;
    var $m_shipName; // default value is uninitialized
    var $m_shipNamePresent;
    var $m_objectType; // default value is uninitialized
    var $m_objectTypePresent;
    var $m_shipType; // default value is uninitialized
    var $m_shipTypePresent;
    var $m_IMO; // default value is uninitialized
    var $m_IMOPresent;
    var $m_MMSI; // default value is uninitialized
    var $m_MMSIPresent;
    var $m_ATONType; // default value is uninitialized
    var $m_ATONTypePresent;
    var $m_ATONName; // default value is uninitialized
    var $m_ATONNamePresent;
    var $m_antPosDistFromFront; // default value is uninitialized
    var $m_antPosDistFromFrontPresent;
    var $m_antPosDistFromLeft; // default value is uninitialized
    var $m_antPosDistFromLeftPresent;
    var $m_natLangShipName; // default value is uninitialized
    var $m_natLangShipNamePresent;
    var $m_portOfRegistry; // default value is uninitialized
    var $m_portOfRegistryPresent;
    var $m_countryFlag; // default value is uninitialized
    var $m_countryFlagPresent;
    var $m_maxAirDraught; // default value is uninitialized
    var $m_maxAirDraughtPresent;
    var $m_maxDraught; // default value is uninitialized
    var $m_maxDraughtPresent;
    var $m_deepWaterVesselind; // default value is uninitialized
    var $m_deepWaterVesselindPresent;

    public function StaticData() {

        date_default_timezone_set('UTC');
        $this->m_idPresent = false;
        $this->m_sourceNamePresent = false;
        $this->m_sourcePresent = false;
        $this->m_lengthPresent = false;
        $this->m_breadthPresent = false;
        $this->m_callsignPresent = false;
        $this->m_shipNamePresent = false;
        $this->m_objectTypePresent = false;
        $this->m_shipTypePresent = false;
        $this->m_IMOPresent = false;
        $this->m_MMSIPresent = false;
        $this->m_ATONTypePresent = false;
        $this->m_ATONNamePresent = false;
        $this->m_antPosDistFromFrontPresent = false;
        $this->m_antPosDistFromLeftPresent = false;
        $this->m_natLangShipNamePresent = false;
        $this->m_portOfRegistryPresent = false;
        $this->m_countryFlagPresent = false;
        $this->m_maxAirDraughtPresent = false;
        $this->m_maxDraughtPresent = false;
        $this->m_deepWaterVesselindPresent = false;
    }

    public function setId( $val ) {

        $this->m_idPresent = true;
        $this->m_id = $val;
        return true;
    }

    public function getId() {

        return $this->m_id;
    }

    public function setSourceName( $val ) {

        $this->m_sourceNamePresent = true;
        $this->m_sourceName = $val;
        return true;
    }

    public function getSourceName() {

        return $this->m_sourceName;
    }

    public function setSource( $val ) {

        if ( ( $val != 1 ) &&
             ( $val != 2 ) &&
             ( $val != 3 ) )
            return false;
        $this->m_sourcePresent = true;
        $this->m_source = $val;
        return true;
    }

    public function getSource() {

        return $this->m_source;
    }

    public function setLength( $val ) {

        if ($val < 0)
          return false;
        $this->m_lengthPresent = true;
        $this->m_length = $val;
        return true;
    }

    public function getLength() {

        return $this->m_length;
    }

    public function hasLength() {

        return $this->m_lengthPresent;
    }

    public function setBreadth( $val ) {

        if ($val < 0)
          return false;
        $this->m_breadthPresent = true;
        $this->m_breadth = $val;
        return true;
    }

    public function getBreadth() {

        return $this->m_breadth;
    }

    public function hasBreadth() {

        return $this->m_breadthPresent;
    }

    public function setCallsign( $val ) {

        $this->m_callsignPresent = true;
        $this->m_callsign = $val;
        return true;
    }

    public function getCallsign() {

        return $this->m_callsign;
    }

    public function hasCallsign() {

        return $this->m_callsignPresent;
    }

    public function setShipName( $val ) {

        $this->m_shipNamePresent = true;
        $this->m_shipName = $val;
        return true;
    }

    public function getShipName() {

        return $this->m_shipName;
    }

    public function hasShipName() {

        return $this->m_shipNamePresent;
    }

    public function setObjectType( $val ) {

        if ( ( $val != 1 ) &&
             ( $val != 2 ) &&
             ( $val != 3 ) &&
             ( $val != 4 ) &&
             ( $val != 5 ) &&
             ( $val != 6 ) &&
             ( $val != 7 ) )
            return false;
        $this->m_objectTypePresent = true;
        $this->m_objectType = $val;
        return true;
    }

    public function getObjectType() {

        return $this->m_objectType;
    }

    public function hasObjectType() {

        return $this->m_objectTypePresent;
    }

    public function setShipType( $val ) {

        if ( ( $val != 20 ) &&
             ( $val != 30 ) &&
             ( $val != 31 ) &&
             ( $val != 32 ) &&
             ( $val != 33 ) &&
             ( $val != 34 ) &&
             ( $val != 35 ) &&
             ( $val != 36 ) &&
             ( $val != 37 ) &&
             ( $val != 40 ) &&
             ( $val != 50 ) &&
             ( $val != 51 ) &&
             ( $val != 52 ) &&
             ( $val != 53 ) &&
             ( $val != 54 ) &&
             ( $val != 55 ) &&
             ( $val != 58 ) &&
             ( $val != 59 ) &&
             ( $val != 60 ) &&
             ( $val != 70 ) &&
             ( $val != 80 ) &&
             ( $val != 90 ) )
            return false;
        $this->m_shipTypePresent = true;
        $this->m_shipType = $val;
        return true;
    }

    public function getShipType() {

        return $this->m_shipType;
    }

    public function hasShipType() {

        return $this->m_shipTypePresent;
    }

    public function setIMO( $val ) {

        $this->m_IMOPresent = true;
        $this->m_IMO = $val;
        return true;
    }

    public function getIMO() {

        return $this->m_IMO;
    }

    public function hasIMO() {

        return $this->m_IMOPresent;
    }

    public function setMMSI( $val ) {

        $this->m_MMSIPresent = true;
        $this->m_MMSI = $val;
        return true;
    }

    public function getMMSI() {

        return $this->m_MMSI;
    }

    public function hasMMSI() {

        return $this->m_MMSIPresent;
    }

    public function setATONType( $val ) {

        if ( ( $val != 0 ) &&
             ( $val != 1 ) &&
             ( $val != 2 ) &&
             ( $val != 3 ) &&
             ( $val != 5 ) &&
             ( $val != 6 ) &&
             ( $val != 7 ) &&
             ( $val != 8 ) &&
             ( $val != 9 ) &&
             ( $val != 10 ) &&
             ( $val != 11 ) &&
             ( $val != 12 ) &&
             ( $val != 13 ) &&
             ( $val != 14 ) &&
             ( $val != 15 ) &&
             ( $val != 16 ) &&
             ( $val != 17 ) &&
             ( $val != 18 ) &&
             ( $val != 19 ) &&
             ( $val != 20 ) &&
             ( $val != 21 ) &&
             ( $val != 22 ) &&
             ( $val != 23 ) &&
             ( $val != 24 ) &&
             ( $val != 25 ) &&
             ( $val != 26 ) &&
             ( $val != 27 ) &&
             ( $val != 28 ) &&
             ( $val != 29 ) &&
             ( $val != 30 ) &&
             ( $val != 31 ) &&
             ( $val != 32 ) &&
             ( $val != 33 ) )
            return false;
        $this->m_ATONTypePresent = true;
        $this->m_ATONType = $val;
        return true;
    }

    public function getATONType() {

        return $this->m_ATONType;
    }

    public function hasATONType() {

        return $this->m_ATONTypePresent;
    }

    public function setATONName( $val ) {

        $this->m_ATONNamePresent = true;
        $this->m_ATONName = $val;
        return true;
    }

    public function getATONName() {

        return $this->m_ATONName;
    }

    public function hasATONName() {

        return $this->m_ATONNamePresent;
    }

    public function setAntPosDistFromFront( $val ) {

        $this->m_antPosDistFromFrontPresent = true;
        $this->m_antPosDistFromFront = $val;
        return true;
    }

    public function getAntPosDistFromFront() {

        return $this->m_antPosDistFromFront;
    }

    public function hasAntPosDistFromFront() {

        return $this->m_antPosDistFromFrontPresent;
    }

    public function setAntPosDistFromLeft( $val ) {

        $this->m_antPosDistFromLeftPresent = true;
        $this->m_antPosDistFromLeft = $val;
        return true;
    }

    public function getAntPosDistFromLeft() {

        return $this->m_antPosDistFromLeft;
    }

    public function hasAntPosDistFromLeft() {

        return $this->m_antPosDistFromLeftPresent;
    }

    public function setNatLangShipName( $val ) {

        $this->m_natLangShipNamePresent = true;
        $this->m_natLangShipName = $val;
        return true;
    }

    public function getNatLangShipName() {

        return $this->m_natLangShipName;
    }

    public function hasNatLangShipName() {

        return $this->m_natLangShipNamePresent;
    }

    public function setPortOfRegistry( $val ) {

        $this->m_portOfRegistryPresent = true;
        $this->m_portOfRegistry = $val;
        return true;
    }

    public function getPortOfRegistry() {

        return $this->m_portOfRegistry;
    }

    public function hasPortOfRegistry() {

        return $this->m_portOfRegistryPresent;
    }

    public function setCountryFlag( $val ) {

        $this->m_countryFlagPresent = true;
        $this->m_countryFlag = $val;
        return true;
    }

    public function getCountryFlag() {

        return $this->m_countryFlag;
    }

    public function hasCountryFlag() {

        return $this->m_countryFlagPresent;
    }

    public function setMaxAirDraught( $val ) {

        if ($val < 0)
          return false;
        $this->m_maxAirDraughtPresent = true;
        $this->m_maxAirDraught = $val;
        return true;
    }

    public function getMaxAirDraught() {

        return $this->m_maxAirDraught;
    }

    public function hasMaxAirDraught() {

        return $this->m_maxAirDraughtPresent;
    }

    public function setMaxDraught( $val ) {

        if ($val < 0)
          return false;
        $this->m_maxDraughtPresent = true;
        $this->m_maxDraught = $val;
        return true;
    }

    public function getMaxDraught() {

        return $this->m_maxDraught;
    }

    public function hasMaxDraught() {

        return $this->m_maxDraughtPresent;
    }

    public function setDeepWaterVesselind( $val ) {

        if ( ( $val != "yes" ) &&
             ( $val != "no" ) )
            return false;
        $this->m_deepWaterVesselindPresent = true;
        $this->m_deepWaterVesselind = $val;
        return true;
    }

    public function getDeepWaterVesselind() {

        return $this->m_deepWaterVesselind;
    }

    public function hasDeepWaterVesselind() {

        return $this->m_deepWaterVesselindPresent;
    }

    public function toXML() {

        $xml = new SimpleXMLElement("<StaticData></StaticData>");

        if ( $this->m_idPresent ) {
            $xml->addAttribute('Id', $this->m_id);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->m_sourceNamePresent ) {
            $xml->addAttribute('SourceName', $this->m_sourceName);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->m_sourcePresent ) {
            $xml->addAttribute('Source', $this->m_source);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        if ( $this->hasLength() ) {
            $xml->addAttribute('Length', number_format($this->m_length, 6));
        }
        if ( $this->hasBreadth() ) {
            $xml->addAttribute('Breadth', number_format($this->m_breadth, 6));
        }
        if ( $this->hasCallsign() ) {
            $xml->addAttribute('Callsign', $this->m_callsign);
        }
        if ( $this->hasShipName() ) {
            $xml->addAttribute('ShipName', $this->m_shipName);
        }
        if ( $this->hasObjectType() ) {
            $xml->addAttribute('ObjectType', $this->m_objectType);
        }
        if ( $this->hasShipType() ) {
            $xml->addAttribute('ShipType', $this->m_shipType);
        }
        if ( $this->hasIMO() ) {
            $xml->addAttribute('IMO', $this->m_IMO);
        }
        if ( $this->hasMMSI() ) {
            $xml->addAttribute('MMSI', $this->m_MMSI);
        }
        if ( $this->hasATONType() ) {
            $xml->addAttribute('ATONType', $this->m_ATONType);
        }
        if ( $this->hasATONName() ) {
            $xml->addAttribute('ATONName', $this->m_ATONName);
        }
        if ( $this->hasAntPosDistFromFront() ) {
            $xml->addAttribute('AntPosDistFromFront', number_format($this->m_antPosDistFromFront, 6));
        }
        if ( $this->hasAntPosDistFromLeft() ) {
            $xml->addAttribute('AntPosDistFromLeft', number_format($this->m_antPosDistFromLeft, 6));
        }
        if ( $this->hasNatLangShipName() ) {
            $xml->addAttribute('NatLangShipName', $this->m_natLangShipName);
        }
        if ( $this->hasPortOfRegistry() ) {
            $xml->addAttribute('PortOfRegistry', $this->m_portOfRegistry);
        }
        if ( $this->hasCountryFlag() ) {
            $xml->addAttribute('CountryFlag', $this->m_countryFlag);
        }
        if ( $this->hasMaxAirDraught() ) {
            $xml->addAttribute('MaxAirDraught', number_format($this->m_maxAirDraught, 6));
        }
        if ( $this->hasMaxDraught() ) {
            $xml->addAttribute('MaxDraught', number_format($this->m_maxDraught, 6));
        }
        if ( $this->hasDeepWaterVesselind() ) {
            $xml->addAttribute('DeepWaterVesselind', $this->m_deepWaterVesselind);
        }
        return $xml->asXML();
    }

    public function toString() {

    	return $this->toStringWithLead("");
    }

    public function toStringWithLead( $lead ) {

        $str = $lead . "StaticData\n";

        $str .= $lead . "    Id = " . $this->m_id . "\n";
        $str .= $lead . "    SourceName = " . $this->m_sourceName . "\n";
        $str .= $lead . "    Source = " . $this->m_source . "\n";
        if ( $this->hasLength() ) {
            $str .= $lead . "    Length = " . number_format($this->m_length, 6) . "\n";
        }
        if ( $this->hasBreadth() ) {
            $str .= $lead . "    Breadth = " . number_format($this->m_breadth, 6) . "\n";
        }
        if ( $this->hasCallsign() ) {
            $str .= $lead . "    Callsign = " . $this->m_callsign . "\n";
        }
        if ( $this->hasShipName() ) {
            $str .= $lead . "    ShipName = " . $this->m_shipName . "\n";
        }
        if ( $this->hasObjectType() ) {
            $str .= $lead . "    ObjectType = " . $this->m_objectType . "\n";
        }
        if ( $this->hasShipType() ) {
            $str .= $lead . "    ShipType = " . $this->m_shipType . "\n";
        }
        if ( $this->hasIMO() ) {
            $str .= $lead . "    IMO = " . $this->m_IMO . "\n";
        }
        if ( $this->hasMMSI() ) {
            $str .= $lead . "    MMSI = " . $this->m_MMSI . "\n";
        }
        if ( $this->hasATONType() ) {
            $str .= $lead . "    ATONType = " . $this->m_ATONType . "\n";
        }
        if ( $this->hasATONName() ) {
            $str .= $lead . "    ATONName = " . $this->m_ATONName . "\n";
        }
        if ( $this->hasAntPosDistFromFront() ) {
            $str .= $lead . "    AntPosDistFromFront = " . number_format($this->m_antPosDistFromFront, 6) . "\n";
        }
        if ( $this->hasAntPosDistFromLeft() ) {
            $str .= $lead . "    AntPosDistFromLeft = " . number_format($this->m_antPosDistFromLeft, 6) . "\n";
        }
        if ( $this->hasNatLangShipName() ) {
            $str .= $lead . "    NatLangShipName = " . $this->m_natLangShipName . "\n";
        }
        if ( $this->hasPortOfRegistry() ) {
            $str .= $lead . "    PortOfRegistry = " . $this->m_portOfRegistry . "\n";
        }
        if ( $this->hasCountryFlag() ) {
            $str .= $lead . "    CountryFlag = " . $this->m_countryFlag . "\n";
        }
        if ( $this->hasMaxAirDraught() ) {
            $str .= $lead . "    MaxAirDraught = " . number_format($this->m_maxAirDraught, 6) . "\n";
        }
        if ( $this->hasMaxDraught() ) {
            $str .= $lead . "    MaxDraught = " . number_format($this->m_maxDraught, 6) . "\n";
        }
        if ( $this->hasDeepWaterVesselind() ) {
            $str .= $lead . "    DeepWaterVesselind = " . $this->m_deepWaterVesselind . "\n";
        }

        return $str;
    }
}
?>
