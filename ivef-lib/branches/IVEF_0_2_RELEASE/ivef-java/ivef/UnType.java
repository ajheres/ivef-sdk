/* 
 *  UnType
 *
 *  UnType is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Tue Jan 5 16:22:59 2010.
 **********************************************************************************
 *  Copyright 2008
 *
 */

package ivef;

import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;


public class UnType { 

    private int m_codeA; // default value is uninitialized
    private int m_codeB; // default value is uninitialized
    private int m_mode; // default value is uninitialized

    public UnType() {

    }

    public UnType(UnType val) {

        m_codeA = val.getCodeA();
        m_codeB = val.getCodeB();
        m_mode = val.getMode();
    }

    public void setCodeA(int val) {

        if (val < 0)
          return;
        if (val > 138)
          return;
        m_codeA = val;
    }

    public int getCodeA() {

        return m_codeA;
    }

    public void setCodeB(int val) {

        if (val < 0)
          return;
        if (val > 9)
          return;
        m_codeB = val;
    }

    public int getCodeB() {

        return m_codeB;
    }

    public void setMode(int val) {

        if ( ( val != 1 ) &&
             ( val != 2 ) &&
             ( val != 3 ) &&
             ( val != 6 ) &&
             ( val != 7 ) &&
             ( val != 8 ) )
            return;
        m_mode = val;
    }

    public int getMode() {

        return m_mode;
    }

    public String toXML() {

        String xml = "<UnType";
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss.SSSZ");

        xml += " CodeA=\"" + m_codeA + "\"";
        xml += " CodeB=\"" + m_codeB + "\"";
        xml += " Mode=\"" + m_mode + "\"";
        xml += ">\n";
        xml += "</UnType>\n";
        return xml;
    }

    public String toString(String lead) {

        String str = lead + "UnType\n";
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss.SSSZ");

        str +=  lead + "    CodeA = " + m_codeA + "\n";
        str +=  lead + "    CodeB = " + m_codeB + "\n";
        str +=  lead + "    Mode = " + m_mode + "\n";
        return str;
    }
    public String encode( String str) {

        str = str.replaceAll("&", "&amp;");
        str = str.replaceAll("<", "&lt;");
        str = str.replaceAll(">", "&gt;");
        str = str.replaceAll("\"", "&quot;");
        return str;
    }


}
