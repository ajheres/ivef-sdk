/* 
 *  ILIdentifier
 *
 *  ILIdentifier is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Mon Apr 12 22:52:33 2010.
 **********************************************************************************
 *  Copyright 2010
 *
 */

#import <Foundation/Foundation.h>
#import "ILOtherId.h"
#import "ILOtherName.h"

//-----------------------------------------------------------
//! \brief       Class definition of ILIdentifier
//!
//! (local) Identification of vessel
//!

@interface ILIdentifier : NSObject { 
    NSMutableArray *m_otherIds;
    NSMutableArray *m_otherNames;
    NSString *m_callsign;
    bool m_callsignPresent;
    int m_IMO;
    bool m_IMOPresent;
    NSString *m_name;
    bool m_namePresent;
    int m_MMSI;
    bool m_MMSIPresent;
    NSString *m_LRIT;
    bool m_LRITPresent;
}

//!Setter for OtherId
//!
-(void) addOtherId:(ILOtherId *) val;
//!Getter for OtherId
//!
-(ILOtherId *) otherIdAt:(int) i;
//!Element counter for OtherId
//!
-(int) countOfOtherIds;
//!Get all elements for OtherId
//!
-(NSArray *) otherIds;
//!Setter for OtherName
//!
-(void) addOtherName:(ILOtherName *) val;
//!Getter for OtherName
//!
-(ILOtherName *) otherNameAt:(int) i;
//!Element counter for OtherName
//!
-(int) countOfOtherNames;
//!Get all elements for OtherName
//!
-(NSArray *) otherNames;

/* Callsign:
   Callsign of the target, in accordance with Article 19, Section III of the ITU Radio Regulations (RR) */
//!Setter for Callsign
//!
-(void) setCallsign:(NSString *) val;
//!Getter for Callsign
//!
-(NSString *) callsign;
//!Test for pressence of Callsign
//!
-(bool) hasCallsign;

/* IMO:
   IMO number of the target */
//!Setter for IMO
//!
-(void) setIMO:(int) val;
//!Getter for IMO
//!
-(int) IMO;
//!Test for pressence of IMO
//!
-(bool) hasIMO;

/* Name:
   Name of the target */
//!Setter for Name
//!
-(void) setName:(NSString *) val;
//!Getter for Name
//!
-(NSString *) name;
//!Test for pressence of Name
//!
-(bool) hasName;

/* MMSI:
   MMSI number of the target */
//!Setter for MMSI
//!
-(void) setMMSI:(int) val;
//!Getter for MMSI
//!
-(int) MMSI;
//!Test for pressence of MMSI
//!
-(bool) hasMMSI;

/* LRIT:
   LRIT identification */
//!Setter for LRIT
//!
-(void) setLRIT:(NSString *) val;
//!Getter for LRIT
//!
-(NSString *) LRIT;
//!Test for pressence of LRIT
//!
-(bool) hasLRIT;
//!Set attributes by providing a key/value dictionary
//!

-(void) setAttributes:(NSDictionary *)attributeDict;
//!Get attributes as a key/value dictionary
//!
-(NSDictionary *) attributes;
//!Get a XML representation of this class
//!
-(NSString *) XML;
//!Get a string representation of this class
//!
-(NSString *) stringValue;
-(NSString *) stringValueWithLead:(NSString *) lead;
//!Helper routine to encode any string to an XML escaped string
//!
-(NSString *) encode: (NSString *) input;

@end



