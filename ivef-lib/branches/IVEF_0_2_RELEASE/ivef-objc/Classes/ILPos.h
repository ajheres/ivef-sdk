/* 
 *  ILPos
 *
 *  ILPos is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Tue Jan 5 23:01:06 2010.
 **********************************************************************************
 *  Copyright 2009
 *
 */

#import <Foundation/Foundation.h>

@interface ILPos : NSObject { 
    float m_altitude;
    bool m_altitudePresent;
    float m_estAccAlt;
    bool m_estAccAltPresent;
    float m_estAccLat;
    bool m_estAccLatPresent;
    float m_estAccLong;
    bool m_estAccLongPresent;
    float m_lat;
    float m_long;
}


/* Altitude:
   The altitude of the target above the WGS-84 ellipsoid in meters */
-(void) setAltitude:(float) val;
-(float) altitude;
-(bool) hasAltitude;

/* EstAccAlt:
   Estimated accuracy
   standard deviation of the calculated position of a target
   expressed in m */
-(void) setEstAccAlt:(float) val;
-(float) estAccAlt;
-(bool) hasEstAccAlt;

/* EstAccLat:
   Estimated accuracy
   standard deviation of the calculated position of a target
   expressed in m */
-(void) setEstAccLat:(float) val;
-(float) estAccLat;
-(bool) hasEstAccLat;

/* EstAccLong:
   Estimated accuracy
   standard deviation of the calculated position of a target
   expressed in m */
-(void) setEstAccLong:(float) val;
-(float) estAccLong;
-(bool) hasEstAccLong;

/* Lat:
   Latitude (WGS84) in degrees. (+/- 90 degrees;
   North = positive; South = negative) Examples:
   
   -90deg (south) =   -90.0000000
   0deg0min1sec (north) =    0.0000016
   50deg50min (north)  = 50.8333333 */
-(void) setLat:(float) val;
-(float) lat;

/* Long:
   Longitude (WGS84) in degrees. (+/- 180 degrees; East = positive; West = negative). Examples:
   
   -180deg (west) =   -180.0000000
   0deg0min1sec (east) =       0.0000016 */
-(void) setLong:(float) val;
-(float) long;

-(void) setAttributes:(NSDictionary *)attributeDict;
-(NSDictionary *) attributes;
-(NSString *) XML;
-(NSString *) stringValue;
-(NSString *) stringValueWithLead:(NSString *) lead;
-(NSString *) encode: (NSString *) input;

@end



