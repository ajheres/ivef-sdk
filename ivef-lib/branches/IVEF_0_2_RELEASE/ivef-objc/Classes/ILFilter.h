/* 
 *  ILFilter
 *
 *  ILFilter is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Tue Jan 5 16:22:58 2010.
 **********************************************************************************
 *  Copyright 2009
 *
 */

#import <Foundation/Foundation.h>

@interface ILFilter : NSObject { 
    NSString *m_predicate;
}


/* Predicate:
   Filter expression in XPath 1.0 definition (http://www.w3.org/TR/1999/REC-xpath-19991116) 
   A Filter must start with //ObjectData (Filter always on entire objects) and can not go beyond a single objects parameters (next/previous/last etc.) 
   
   Examples:
   
   All objects: //ObjectData
   All objects faster then 10 m/s: //ObjectData[TrackData[@SOG > 10]]
   All objects named "Krieken": //ObjectData[VesselData/Identifier[@Name = "Krieken"]]
   All objects heading for Antwerp, HANSADOK 497 with a max keelheigth of 20m: //ObjectData[VoyageData[@DestCode = BEANR0170100497]]  AND //ObjectData[VesselData/Construction[@MaxKeelHeigth > 20]] */
-(void) setPredicate:(NSString *) val;
-(NSString *) predicate;

-(void) setAttributes:(NSDictionary *)attributeDict;
-(NSDictionary *) attributes;
-(NSString *) XML;
-(NSString *) stringValue;
-(NSString *) stringValueWithLead:(NSString *) lead;
-(NSString *) encode: (NSString *) input;

@end



