/* 
 *  ILBody
 *
 *  ILBody is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Tue Jan 5 16:22:58 2010.
 **********************************************************************************
 *  Copyright 2009
 *
 */

#import <Foundation/Foundation.h>
#import "ILLoginRequest.h"
#import "ILLoginResponse.h"
#import "ILLogout.h"
#import "ILObjectData.h"
#import "ILPing.h"
#import "ILPong.h"
#import "ILServerStatus.h"
#import "ILServiceRequest.h"
#import "ILServiceRequestResponse.h"

@interface ILBody : NSObject { 
    ILLoginRequest *m_loginRequest;
    bool m_loginRequestPresent;
    ILLoginResponse *m_loginResponse;
    bool m_loginResponsePresent;
    ILLogout *m_logout;
    bool m_logoutPresent;
    ILObjectData *m_objectData;
    bool m_objectDataPresent;
    ILPing *m_ping;
    bool m_pingPresent;
    ILPong *m_pong;
    bool m_pongPresent;
    ILServerStatus *m_serverStatus;
    bool m_serverStatusPresent;
    ILServiceRequest *m_serviceRequest;
    bool m_serviceRequestPresent;
    ILServiceRequestResponse *m_serviceRequestResponse;
    bool m_serviceRequestResponsePresent;
}


/* LoginRequest:
   MESSAGE sent by the user to identify oneselfs and request the default service */
-(void) setLoginRequest:(ILLoginRequest *) val;
-(ILLoginRequest *) loginRequest;
-(bool) hasLoginRequest;

/* LoginResponse:
   MESSAGE sent by the supplier indicating wether the user login was accepted or not */
-(void) setLoginResponse:(ILLoginResponse *) val;
-(ILLoginResponse *) loginResponse;
-(bool) hasLoginResponse;

/* Logout:
   MESSAGE sent by the user to announce it will close it's connection */
-(void) setLogout:(ILLogout *) val;
-(ILLogout *) logout;
-(bool) hasLogout;

/* ObjectData:
   MESSAGE sent by the supplier containing data regarding objects in its domain */
-(void) setObjectData:(ILObjectData *) val;
-(ILObjectData *) objectData;
-(bool) hasObjectData;

/* Ping:
   MESSAGE sent by either the user or the supplier to verify the aliveness of the connection, failure to respond within the timeout will lead to disconnect (default = 3 seconds) */
-(void) setPing:(ILPing *) val;
-(ILPing *) ping;
-(bool) hasPing;

/* Pong:
   MESSAGE sent as reply to a MSG_Ping to confirm the aliveness of the connection. */
-(void) setPong:(ILPong *) val;
-(ILPong *) pong;
-(bool) hasPong;

/* ServerStatus:
   MESSAGE sent by the server in case the server is experienceing / recovering from load problems */
-(void) setServerStatus:(ILServerStatus *) val;
-(ILServerStatus *) serverStatus;
-(bool) hasServerStatus;

/* ServiceRequest:
   MESSAGE sent by the user to request a different service than the current service, to stop all services request data from 0 areas or logout */
-(void) setServiceRequest:(ILServiceRequest *) val;
-(ILServiceRequest *) serviceRequest;
-(bool) hasServiceRequest;

/* ServiceRequestResponse:
   MESSAGE sent by the suplier as as a response to a service request */
-(void) setServiceRequestResponse:(ILServiceRequestResponse *) val;
-(ILServiceRequestResponse *) serviceRequestResponse;
-(bool) hasServiceRequestResponse;

-(void) setAttributes:(NSDictionary *)attributeDict;
-(NSDictionary *) attributes;
-(NSString *) XML;
-(NSString *) stringValue;
-(NSString *) stringValueWithLead:(NSString *) lead;
-(NSString *) encode: (NSString *) input;

@end



