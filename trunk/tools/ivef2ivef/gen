#../xsd2code/bin/xsd2code --file=../../doc/msg_xmlschema.xsd --prefix=IVEF1 --out=ivef1
#../xsd2code/bin/xsd2code --file=../../doc/ivef2.xsd --prefix=IVEF2 --out=ivef2/

HEADER=conv/convert.h
CLASS=conv/convert.cpp

#------------------------------------------------------------------------------------------
echo "#include <QtCore>" > $HEADER

for file in `ls -1 ivef*/IVEF?msg*.h`
do 
  echo "#include \"$file\"" >> $HEADER
done

echo "class Convert : public QObject {" >> $HEADER 
echo "    Q_OBJECT" >> $HEADER
echo "" >> $HEADER
echo "public:" >> $HEADER
echo "    Convert();" >> $HEADER
echo "" >> $HEADER

for file in `ls -1 ivef1/IVEF1msg*.h`
do
   msg1=`basename $file .h`
   tmp=`echo $msg1 | cut -c 6-`
   msg2=`echo IVEF2$tmp`
   file2=`echo ${msg2}.h`
   if [ -f ivef2/$file2 ]
   then
       echo "    $msg2 convert($msg1 *msg);" >> $HEADER
   else
       echo Warning, cannot convert $msg1 no corresponding type in IVEF2
   fi
done

for file in `ls -1 ivef2/IVEF2msg*.h`
do
   msg2=`basename $file .h`
   tmp=`echo $msg2 | cut -c 6-`
   msg1=`echo IVEF1$tmp`
   file1=`echo ${msg1}.h`
   if [ -f ivef1/$file1 ]
   then
       echo "    $msg1 convert($msg2 *msg);" >> $HEADER
   else
       echo Warning, cannot convert $msg2 no corresponding type in IVEF1
   fi
done

echo "" >> $HEADER
echo " }; " >> $HEADER

#------------------------------------------------------------------------------------------
echo "#include \"convert.h\"" > $CLASS
echo "" >> $CLASS
echo "" >> $CLASS

echo "Convert::Convert() {" >> $CLASS
echo "}" >> $CLASS
echo "" >> $CLASS

for file in `ls -1 ivef1/IVEF1msg*.h`
do
   msg1=`basename $file .h`
   tmp=`echo $msg1 | cut -c 6-`
   msg2=`echo IVEF2$tmp`
   file2=`echo ${msg2}.h`
   if [ -f ivef2/$file2 ]
   then
       echo "$msg2 Convert::convert($msg1 *msg) {" >> $CLASS
       echo "" >> $CLASS
       echo "    $msg2 newMsg;" >> $CLASS
       echo "" >> $CLASS
       echo "    // perform the actual conversion" >> $CLASS
       echo "" >> $CLASS
       echo "    return newMsg;" >> $CLASS
       echo "}" >> $CLASS
       echo "" >> $CLASS
   fi
done

for file in `ls -1 ivef2/IVEF2msg*.h`
do
   msg2=`basename $file .h`
   tmp=`echo $msg2 | cut -c 6-`
   msg1=`echo IVEF1$tmp`
   file1=`echo ${msg1}.h`
   if [ -f ivef1/$file1 ]
   then
       echo "$msg1 Convert::convert($msg2 *msg) {" >> $CLASS
       echo "" >> $CLASS
       echo "    $msg1 newMsg;" >> $CLASS
       echo "" >> $CLASS
       echo "    // perform the actual conversion" >> $CLASS
       echo "" >> $CLASS
       echo "    return newMsg;" >> $CLASS
       echo "}" >> $CLASS
       echo "" >> $CLASS
   fi
done

qmake -project
qmake 
make -j 12
