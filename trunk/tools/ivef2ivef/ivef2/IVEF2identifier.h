/* 
 *  Identifier
 *
 *  Identifier is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by xsd2code on Thu Sep 4 16:29:00 2008.
 **********************************************************************************
 *  Copyright 2008
 *
 */

#ifndef __IDENTIFIER_H__
#define __IDENTIFIER_H__

#include <QtCore>
#include "IVEF2foreignname.h"
#include "IVEF2foreignid.h"

class Identifier : public QObject { 
    Q_OBJECT

public:
    Identifier();
    Identifier(const Identifier&);
    Identifier & operator=(const Identifier&/*val*/);

    /* ForeignName:
       Other names for the vessel than the English name */
    void addForeignName(foreignName val);
    foreignName getForeignNameAt(int i) const;
    int countOfForeignNames() const;

    /* ForeignId:
       Other Id's for the vessel than the international standard Identifiers */
    void addForeignId(foreignId val);
    foreignId getForeignIdAt(int i) const;
    int countOfForeignIds() const;

    /* Callsign:
       Callsign of the target */
    void setCallsign(QString val);
    QString getCallsign() const;
    bool hasCallsign();

    /* Name:
       Name of the target */
    void setName(QString val);
    QString getName() const;
    bool hasName();

    /* MMSI:
       MMSI number of the target */
    void setMMSI(int val);
    int getMMSI() const;
    bool hasMMSI();

    /* IMO:
       IMO number of the target */
    void setIMO(int val);
    int getIMO() const;
    bool hasIMO();

    /* Telephone:
       Telephone number under which the target can be reached */
    void setTelephone(int val);
    int getTelephone() const;
    bool hasTelephone();

    /* SatCom:
       SatCom number under which the target can be reached */
    void setSatCom(int val);
    int getSatCom() const;
    bool hasSatCom();
    QString toXML();
    QString toString(QString lead);

private:
    QVector<foreignName> m_foreignNames;
    QVector<foreignId> m_foreignIds;
    QString m_callsign;
    bool m_callsignPresent;
    QString m_name;
    bool m_namePresent;
    int m_MMSI;
    bool m_MMSIPresent;
    int m_IMO;
    bool m_IMOPresent;
    int m_telephone;
    bool m_telephonePresent;
    int m_satCom;
    bool m_satComPresent;

}; 

#endif

